install.packages("rmarkdown")
35
brew install --cask xquartz
brew install --cask xquartz
q()
install.packages("rmarkdown")
q()
knitr::opts_chunk$set(echo = TRUE)
knitr::include_graphics()
library(FactoMineR)
library(vtable)
library(tidyverse)
library(readxl)
library(questionr)
install.packages("factoextra")
library(factoextra)Df<- read.csv("/Users/hamadoundoucoure/Documents/GitHub Project/Data-Analyse-Project/Data Mining Classification/Data/Df.csv")
Df<- read.csv("/Users/hamadoundoucoure/Documents/GitHub Project/Data-Analyse-Project/Data Mining Classification/Data/Df.csv")
Df$life_expec <- as.double(Df$life_expec)
Df$sport_good_services <- as.double(Df$sport_good_services)
Df$outdoor_durable <- as.double(Df$outdoor_durable)
Df$indoor_durable <- as.double(Df$indoor_durable)
Df$gini <- as.numeric(Df$gini)
source("/Users/hamadoundoucoure/Documents/GitHub Project/Data-Analyse-Project/Data Mining Classification/Script/projetdm.r", encoding = "UTF-8")
source("/Users/hamadoundoucoure/Documents/GitHub Project/Data-Analyse-Project/Data Mining Classification/Script/projetdm.r", encoding = "UTF-8")
source("/Users/hamadoundoucoure/Documents/GitHub Project/Data-Analyse-Project/Data Mining Classification/Script/projetdm.r", encoding = "UTF-8")
source("/Users/hamadoundoucoure/Documents/GitHub Project/Data-Analyse-Project/Data Mining Classification/Script/projetdm.r", encoding = "UTF-8")
knitr::opts_chunk$set(echo = TRUE)
knitr::include_graphics()
library(FactoMineR)
library(vtable)
library(tidyverse)
library(readxl)
library(questionr)
install.packages("factoextra")
library(factoextra)
Df<- read.csv("/Users/hamadoundoucoure/Documents/GitHub Project/Data-Analyse-Project/Data Mining Classification/Data/Df.csv")
`
Df<- read.csv("/Users/hamadoundoucoure/Documents/GitHub Project/Data-Analyse-Project/Data Mining Classification/Data/Df.csv")
Df$life_expec <- as.double(Df$life_expec)
Df$sport_good_services <- as.double(Df$sport_good_services)
Df$outdoor_durable <- as.double(Df$outdoor_durable)
Df$indoor_durable <- as.double(Df$indoor_durable)
Df$gini <- as.numeric(Df$gini)
rownames(Df) <- Df$TIME.x
Df %>% glimpse
st(data = Df)
res.pca <- PCA(Df[,2:10])
summary(res.pca,ncp=10,nbelements=Inf,file="C:/Users/user/Desktop/m2_Data/analyse_de_données/datamining/Projet/projetacp.txt")
round(res.pca$eig,2)
# Graph avec titres
barplot(res.pca$eig[,1], main="Valeurs propres",names.arg=paste("dim",1:nrow(res.pca$eig)))
# Histogramme (des valeurs propres) en % de l'inertie)
barplot(res.pca$eig[,2], main="D?composition de l'inertie totale",names.arg=paste("dim",1:nrow(res.pca$eig)))
# Histogramme (des valeurs propres) en % de l'inertie)
barplot(res.pca$eig[,2], main="D?composition de l'inertie totale",names.arg=paste("dim",1:nrow(res.pca$eig)))
plot.PCA(res.pca, choix="ind")
dimdesc(res.pca)
plot.PCA(res.pca, choix="ind", cex=0.8, select="cos2 0.7")
plot.PCA(res.pca, choix="ind", cex=0.8, select="cos2 0.9", unselect=1)
plot.PCA(res.pca, choix="ind", cex=0.8, select="contrib 70", unselect=1)
plot.PCA(res.pca, choix="var", cex=0.8, select="cos2 0.7")
plot.PCA(res.pca, choix="var", cex=0.8, select="contrib 5")
```{r pressure, echo=FALSE}
plot(pressure)
```{r}
# 6 - CAH bas?e sur le crit?re de Ward 
Df <- dist(Df[,2:10], method = "euclidean") # la matrice des distances
fit <- hclust(Df, method="ward.D")
plot(fit) # Affiche le dendrogramme
groups <- cutree(fit, k=3) # coupe l'arbre en 3 classes
# dessine le dendroramme en d?limitant chaque classe par un rectangle rouge
rect.hclust(fit, k=3, border="red")
```{r}
# Faire une ACP  
# (option ncp=Inf permette de faire appraitre totes les axes, on peut utiliser ncp=3 ou ncp=4)
res.pca=PCA(Df[,2:10])  
summary(res.pca,ncp=Inf)
res.pca <- PCA(def[,2:10])  
fviz_pca_var(res.pca, col.var = "cos2",
             gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
             repel = TRUE # ???vite le chevauchement de texte
)
library(FactoMineR)
library(vtable)
library(tidyverse)
library(readxl)
library(questionr)
install.packages("factoextra")
library(factoextra)
Df<- read.csv("/Users/hamadoundoucoure/Documents/GitHub Project/Data-Analyse-Project/Data Mining Classification/Data/Df.csv")
Df$life_expec <- as.double(Df$life_expec)
Df$sport_good_services <- as.double(Df$sport_good_services)
Df$outdoor_durable <- as.double(Df$outdoor_durable)
Df$indoor_durable <- as.double(Df$indoor_durable)
Df$gini <- as.numeric(Df$gini)
rownames(Df) <- Df$TIME.x
Df %>% glimpse
st(data = Df)
```{r}
res.pca <- PCA(Df[,2:10])
res.pca <- PCA(Df[,2:10])
round(res.pca$eig,2)
# Graph avec titres
barplot(res.pca$eig[,1], main="Valeurs propres",names.arg=paste("dim",1:nrow(res.pca$eig)))
# Histogramme (des valeurs propres) en % de l'inertie)
barplot(res.pca$eig[,2], main="D?composition de l'inertie totale",names.arg=paste("dim",1:nrow(res.pca$eig)))
plot.PCA(res.pca, choix="ind")
dimdesc(res.pca)
plot(pressure)
plot.PCA(res.pca, choix="ind", cex=0.8, select="cos2 0.7")
plot.PCA(res.pca, choix="ind", cex=0.8, select="cos2 0.9", unselect=1)
plot.PCA(res.pca, choix="ind", cex=0.8, select="contrib 70", unselect=1)
plot.PCA(res.pca, choix="var", cex=0.8, select="cos2 0.7")
plot.PCA(res.pca, choix="var", cex=0.8, select="contrib 5")
# Réalisation d'une analyse en composantes principales (ACP) sur les colonnes 2 à 10 de Df
res.pca <- PCA(Df[,2:10])
# Affichage du résumé de l'ACP avec tous les axes (ncp=Inf pour afficher tous les axes)
summary(res.pca, ncp = Inf)
# Selection des variables prises en compte
res.pca <- PCA(Df[,2:10])
fviz_pca_var(res.pca, col.var = "cos2", 
             gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"), 
             repel = TRUE  # Eviter le chevauchement des textes
)
Df <- dist(Df[,2:10], method = "euclidean")
# Application de l'algorithme de clustering hiérarchique (méthode de Ward)
fit <- hclust(Df, method="ward.D")
# Affichage du dendrogramme du clustering hiérarchique
plot(fit)
# Découpage du dendrogramme en 3 groupes (classes)
groups <- cutree(fit, k=3)
# Dessin du dendrogramme avec des rectangles rouges délimitant chaque groupe
rect.hclust(fit, k=3, border="red")
q()
